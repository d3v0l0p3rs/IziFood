{"version":3,"sources":["Redux/Reducers/Orders/orders.types.ts","Redux/Reducers/Orders/orders.actions.ts","Components/App/Components/Column/column.types.ts","Components/App/Components/Card/index.tsx","Components/App/Components/Column/index.tsx","Redux/Reducers/Orders/orders.selectors.ts","Components/App/Components/CustomDialog/constants.ts","Components/App/Components/CustomInput/index.tsx","Components/App/Components/CustomDialog/index.tsx","Redux/Reducers/Tables/tables.types.ts","Components/App/Components/Table/index.tsx","Redux/Reducers/Tables/table.actions.ts","Redux/Reducers/Tables/tables.selectors.ts","Components/App/Screens/Home/index.tsx","Components/App/Screens/Login/login.ts","Components/App/Screens/Login/index.tsx","Components/App/index.tsx","Redux/Reducers/Orders/orders.reducer.ts","Redux/Reducers/Tables/tables.reducer.ts","Redux/Store/index.ts","index.tsx","Components/App/Components/CustomInput/styles.module.scss","Components/App/Components/CustomDialog/styles.module.scss"],"names":["OrdersTypes","OrdersCurrentState","changeOrderStatus","orders","type","CHANGE_ORDER_STATUS","payload","setAddOrderFormVisible","show","SET_ADD_ORDER_FORM_VISIBLE","Order","Card","props","dispatch","useDispatch","useSelector","state","ordersReducer","className","client","productList","phone","cost","deliveryType","currentState","onClick","id","index","findIndex","order","tempNewOrders","newStatus","setPreviousOrderStatus","disabled","setNextOrderStatus","orderButtons","cards","setCards","currentFilter","setCurrentFilter","excludedProperties","length","properties","Object","keys","filter","property","includes","newOrder","currentOrder","name","status","map","idx","ASC","getCardValue","card","value","charAt","sort","a","b","sortCardsBy","Column","useState","data","columnType","note","address","neighborhood","ordersSelector","filterPendingOrders","createSelector","ON_HOLD","filterCookingOrders","IN_PROGRESS","filterReadyOrders","READY","CREATE_ORDER_FORM_LABELS","CREATE_ORDERS_FORMS_NAMES","CustomInput","inputName","label","errors","inputRef","htmlFor","styles","customLabel","customInput","ref","CustomDialog","currentCards","useForm","mode","register","handleSubmit","onSubmit","watch","newOrders","SET_ADD_ORDER","addOrder","Dialog","open","DialogTitle","DialogContent","dialogContent","required","DialogActions","negativeAction","TablesTypes","TablesCurrentState","Table","setTableStatus","table","CHANGE_TABLE_STATUS","changeTableStatus","bill","ButtonGroup","variant","color","aria-label","Button","tablesSelector","tablesReducer","tables","Home","pendingOrdersSelector","useMemo","cookingOrdersSelector","readyOrdersSelector","pendingOrders","cookingOrders","readyOrders","showAddOrderForm","onSaveForm","useCallback","alert","onCancelSaveForm","Fab","positiveAction","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","json","Login","setToken","username","setUserName","password","setPassword","e","preventDefault","token","onChange","target","App","path","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+GAOYA,EAWAC,E,6NCfL,SAASC,EAAkBC,GAChC,MAAO,CACLC,KAAMJ,EAAYK,oBAClBC,QAASH,GAIN,SAASI,EAAuBC,GACrC,MAAM,CACJJ,KAAMJ,EAAYS,2BAClBH,QAASE,I,SDNDR,K,0CAAAA,E,wDAAAA,E,+BAAAA,M,cAWAC,K,kBAAAA,E,0BAAAA,E,cAAAA,E,YAAAA,E,iBAAAA,M,SENAS,E,QC0IGC,EAvImB,SAACC,GACjC,IAAMC,EAAWC,cAEXX,EAASY,aAAY,SAACC,GAAD,OAAsBA,EAAMC,cAAcd,UA0DrE,OACE,sBAAKe,UAAU,mBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMO,cAIjB,sBAAKD,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMQ,mBAIjB,sBAAKF,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMS,aAIjB,sBAAKH,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMU,YAIjB,sBAAKJ,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMW,oBAIjB,sBAAKL,UAAU,yBAAf,UACE,8BACE,cAAC,IAAD,MAEF,8BACE,+BAAON,EAAMY,oBAIjB,sBAAKN,UAAU,uBAAf,UACE,wBACEO,QAAS,kBAtFc,SAACC,GAC9B,IAAMC,EAAQxB,EAAOyB,WAAU,SAACC,GAAD,OAAWA,EAAMH,KAAOA,KACjDI,EAAa,YAAO3B,GAEtB4B,EAAwB,SAG5B,OAAQD,EAAcH,GAAOH,cAC3B,IAAK,cACHO,EAAY,UACZ,MAEF,IAAK,QACHA,EAAY,cACZ,MAEF,QACEA,EAAY,UAIhBD,EAAcH,GAAd,2BACKxB,EAAOwB,IADZ,IAEEH,aAAcO,IAEhBlB,EAASX,EAAkB4B,IA6DNE,CAAuBpB,EAAMc,KAC5CO,SAAiC,YAAvBrB,EAAMY,aAFlB,SAIE,cAAC,IAAD,MAEF,wBACEC,QAAS,kBAxHU,SAACC,GAC1B,IAAMC,EAAQxB,EAAOyB,WAAU,SAACC,GAAD,OAAWA,EAAMH,KAAOA,KACjDI,EAAa,YAAO3B,GAEtB4B,EAAwB,SAG5B,OAAQD,EAAcH,GAAOH,cAC3B,IAAK,UACHO,EAAY,cACZ,MAEF,IAAK,cACHA,EAAY,QACZ,MAEF,QACEA,EAAY,UAIhBD,EAAcH,GAAd,2BACKxB,EAAOwB,IADZ,IAEEH,aAAcO,IAEhBlB,EAASX,EAAkB4B,IA+FNI,CAAmBtB,EAAMc,KACxCO,SAAiC,UAAvBrB,EAAMY,aAFlB,SAIE,cAAC,IAAD,c,SDnIEd,O,aAAAA,I,iBAAAA,M,eEUNyB,EAAe,SACnBC,EACAC,EACAC,EAA8BC,GAE9B,IAAMC,EAAqB,CAAC,MAC5B,GAAqB,IAAjBJ,EAAMK,OAAc,OAAQ,6BAChC,IAAMC,EAAcC,OAAOC,KAAKR,EAAM,IACnCS,QAAO,SAAAC,GAAQ,OAAKN,EAAmBO,SAASD,MAC7CE,EAAW,SAACF,EAA2BG,GAC3C,OAAOX,GAAiBA,EAAcY,OAASJ,GAAYG,EAAeA,GAEtEE,EAAS,SAACL,EAA2BG,GACzC,IAAIE,EAAS,EAEb,OADIb,GAAiBA,EAAcY,OAASJ,IAAUK,EAASH,EAASF,EAAUG,IAC3EE,GAIT,OAAQ,mCACLT,EAAWU,KAAI,SAACN,EAAUO,GAAX,OACd,yBACE5B,QAAS,WACP,IAAMI,EAAQmB,EAASF,GAAuB,OAAbR,QAAa,IAAbA,OAAA,EAAAA,EAAeT,QAAS,GACzDQ,EAxCU,SAClBD,EACAU,GAEiB,IADjBjB,EACgB,uDADDnB,EAAM4C,IAEfC,EAAe,SAACC,EAAiBV,GACrC,IAAIW,EAAyB,EAG7B,MAF8B,kBAAnBD,EAAKV,KAAwBW,EAASD,EAAKV,GAAqBY,OAAO,IACpD,kBAAnBF,EAAKV,KAAwBW,EAAQD,EAAKV,IAC9CW,GAET,OAAOrB,EAAMuB,MAAK,SAACC,EAAGC,GAAJ,OAChBN,EAAaK,EAAGd,GAAYS,EAAaM,EAAGf,GAAYjB,GAASA,KA4BlDiC,CAAY1B,EAAOU,EAAUjB,IACtCU,EAAiB,CAACW,KAAMJ,EAAUjB,MAAOA,KAJ7C,sBAOciB,EAPd,IAOyBK,EAAOL,GAAuB,OAAbR,QAAa,IAAbA,OAAA,EAAAA,EAAeT,QAAS,KAD3DwB,SAqCEU,EA9BuB,SAACnD,GAAwB,IAAD,EACvCoD,mBAAsBpD,EAAMqD,MAAxC5B,EADmD,sBAElB2B,mBAAwB,MAFN,mBAErD1B,EAFqD,KAEtCC,EAFsC,KAI5D,OACE,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+BN,EAAMsD,aAEpC/B,EAAavB,EAAMqD,KAAM5B,EAAUC,EAAeC,GACnD,qBAAKrB,UAAU,wBAAf,SACGN,EAAMqD,KAAKb,KAAI,SAACa,EAAMZ,GAAP,OACd,cAAC,EAAD,CACE3B,GAAIuC,EAAKvC,GACTN,YAAa6C,EAAK7C,YAClBD,OAAQ8C,EAAK9C,OACbE,MAAO4C,EAAK5C,MACZ8C,KAAOF,EAAKE,KACZC,QAAWH,EAAKG,QAChBC,aAAgBJ,EAAKI,aACrB/C,KAAM2C,EAAK3C,KACXC,aAAc0C,EAAK1C,aACnBC,aAAcyC,EAAKzC,cACd6B,Y,gBCzEJiB,EAAiB,SAACtD,GAAD,OAAmCA,EAAMC,cAAcd,QAExEoE,EAAsBC,YACjC,CAACF,IACD,SAACnE,GACC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQ0C,QAAO,SAAAhB,GAAK,OAAIA,EAAML,eAAiBvB,EAAmBwE,cAGhEC,EAAsBF,YACjC,CAACF,IACD,SAACnE,GACC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQ0C,QAAO,SAAAhB,GAAK,OAAIA,EAAML,eAAiBvB,EAAmB0E,kBAGhEC,EAAoBJ,YAC/B,CAACF,IACD,SAACnE,GACC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQ0C,QAAO,SAAAhB,GAAK,OAAIA,EAAML,eAAiBvB,EAAmB4E,Y,sECtBhEC,EACH,UADGA,EAEF,WAFEA,EAGL,OAHKA,EAIJ,cAJIA,EAKF,eALEA,GAMG,SANHA,GAOL,QAPKA,GAQG,kBAGHC,GAEE,cAFFA,GAGJ,OAHIA,GAIH,SAJGA,GAKJ,QALIA,GAMF,UANEA,GAOI,eAPJA,GAQL,OARKA,GASG,e,wCCTD,SAASC,GAAT,GAAiF,IAA3DC,EAA0D,EAA1DA,UAA0D,IAA/C7E,YAA+C,MAAxC,OAAwC,EAAxB8E,GAAwB,EAAhCC,OAAgC,EAAxBD,OAAOE,EAAiB,EAAjBA,SAC5E,OACE,qCACI,uBAAOC,QAASJ,EAAW/D,UAAWoE,KAAOC,YAA7C,SAA2DL,IAC3D,uBAAOhC,KAAM+B,EAAWvD,GAAIuD,EAAW7E,KAAMA,EAAMc,UAAWoE,KAAOE,YAAaC,IAAKL,OCChF,SAASM,GAAa9E,GACnC,IAAMC,EAAWC,cACX6E,EAAe5E,aACnB,SAACC,GAAD,OAAsBA,EAAMC,cAAcd,UAHiB,EAMXyF,YAAmB,CAACC,KAAM,QAApEC,EANqD,EAMrDA,SAAUC,EAN2C,EAM3CA,aACZC,GAPuD,EAM7BC,MAN6B,EAMtBd,OACtBY,GAAa,SAAA9B,GAC5BA,EAAKzC,aAAe,UACpByC,EAAKvC,GAAI,EACT,IAAMwE,EAAS,sBACVP,GADU,CAEb1B,IAEFpD,EPbG,SAAkBoD,GACvB,MAAM,CACJ7D,KAAMJ,EAAYmG,cAClB7F,QAAS2D,GOUAmC,CAASF,QAEpB,OACE,eAACG,EAAA,EAAD,CAAQC,KAAM1F,EAAMJ,KAApB,UACE,cAAC+F,EAAA,EAAD,CAAa7E,GAAG,oBAAhB,yBACA,uBAAMsE,SAAUA,EAAhB,UACE,eAACQ,EAAA,EAAD,CAAetF,UAAWoE,KAAOmB,cAAjC,UACE,cAACzB,GAAD,CACEC,UAAWF,GACXG,MAAOJ,EACPM,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,EACPM,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,EACPM,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,EACP1E,KAAK,SACLgF,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,EACPM,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,GACPM,SAAUU,EAAS,CAAEY,UAAU,MAEjC,cAAC1B,GAAD,CACEC,UAAWF,GACXG,MAAOJ,GACPM,SAAUU,EAAS,CAAEY,UAAU,IAC/BtG,KAAK,WAEP,cAAC4E,GAAD,CACEC,UAAWF,GACXG,MAAOJ,GACPM,SAAUU,EAAS,CAAEY,UAAU,SAGnC,eAACC,EAAA,EAAD,WACE,wBAAQlF,QAAS,kBAAMb,EAAMgG,kBAAkBxG,KAAK,SAApD,sBACA,wBAAQA,KAAK,SAAb,8B,UC5EEyG,GAQAC,G,8BARAD,K,2CAAAA,Q,cAQAC,K,sBAAAA,E,oBAAAA,E,qBAAAA,Q,KCPZ,IAiCeC,GAjCqB,SAACnG,GACnC,IAAMC,EAAWC,cAEXkG,EAAiB,SAACC,EAAmBjG,GACzCH,ECRG,SAA2BoG,GAChC,MAAO,CACL7G,KAAMyG,GAAYK,oBAClB5G,QAAS2G,GDKAE,CAAkB,2BAAIF,GAAL,IAAYjG,MAAOA,OAG/C,OACE,sBAAKE,UAAU,oBAAf,UACE,wCAAWN,EAAMc,MACjB,6CAAgBd,EAAMwG,QACtB,2CAAcxG,EAAMI,SACpB,eAACqG,GAAA,EAAD,CAAaC,QAAQ,OAAOC,MAAM,UAAUC,aAAW,4BAAvD,UACE,cAACC,GAAA,EAAD,CACEH,QAAyB,cAAhB1G,EAAMI,MAAwB,YAAc,OACrDS,QAAS,kBAAMuF,EAAepG,EAAO,cACrCqB,SAA0B,cAAhBrB,EAAMI,MAHlB,wBAKA,cAACyG,GAAA,EAAD,CACEH,QAAyB,aAAhB1G,EAAMI,MAAuB,YAAc,OACpDS,QAAS,kBAAMuF,EAAepG,EAAO,aACrCqB,SAA0B,aAAhBrB,EAAMI,MAHlB,qBAKA,cAACyG,GAAA,EAAD,CACEH,QAAyB,aAAhB1G,EAAMI,MAAuB,YAAc,OACpDS,QAAS,kBAAMuF,EAAepG,EAAO,aACrCqB,SAA0B,aAAhBrB,EAAMI,MAHlB,8BE3BK0G,GAAiB,SAAC1G,GAAD,OAAoCA,EAAM2G,cAAcC,QCyEvEC,GA3DQ,WACrB,IAAMhH,EAAWC,cAGXgH,EAAwBC,mBAAQ,kBAAMxD,IAAqB,IAC3DyD,EAAwBD,mBAAQ,kBAAMrD,IAAqB,IAC3DuD,EAAsBF,mBAAQ,kBAAMnD,IAAmB,IAEvDsD,EAAgBnH,YAAY+G,GAAuB,kBAAM,KACzDK,EAAgBpH,YAAYiH,GAAuB,kBAAM,KACzDI,EAAcrH,YAAYkH,GAAqB,kBAAM,KACrDL,EAAS7G,YAAY2G,IAAgB,kBAAM,KAE3CW,EAAmBtH,aACvB,SAACC,GAAD,OAAsBA,EAAMC,cAAcoH,oBAGtCC,EAAaC,uBAAY,kBAAMC,MAAM,cAAa,IAClDC,EAAmBF,uBACvB,kBAAM1H,EAASN,GAAuB,MACtC,CAACM,IAGH,OACE,sBAAKK,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAQgD,WAAW,UAAUD,KAAMiE,IACnC,cAAC,EAAD,CAAQhE,WAAW,UAAUD,KAAMkE,IACnC,cAAC,EAAD,CAAQjE,WAAW,QAAQD,KAAMmE,OAGnC,qBAAKlH,UAAU,aAAf,SACE,cAACwH,EAAA,EAAD,CACExH,UAAU,aACVO,QAAS,kBAAMZ,EAASN,GAAuB,KAFjD,SAIE,cAAC,IAAD,QAIJ,cAACmF,GAAD,CACElF,KAAM6H,EACNM,eAAgBL,EAChB1B,eAAgB6B,IAElB,8BACGb,EAAOxE,KAAI,SAAA6D,GAAK,OACf,cAAC,GAAD,CAEEvF,GAAIuF,EAAMvF,GACV0F,KAAMH,EAAMG,KACZpG,MAAOiG,EAAMjG,OAHRiG,EAAMvF,a,4BCjEVkH,GAAS,yCAAG,WAAMC,GAAN,UAAAjF,EAAA,+EAChBkF,MAAM,8BAA+B,CAC1CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUN,KACpBO,MAAK,SAAAnF,GAAI,OAAIA,EAAKoF,WAPE,2CAAH,sD,MCIP,SAASC,GAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,SAAiB,EACfvF,qBADe,mBACxCwF,EADwC,KAC9BC,EAD8B,OAEfzF,qBAFe,mBAExC0F,EAFwC,KAE9BC,EAF8B,KAIzC5D,EAAY,yCAAG,WAAO6D,GAAP,gBAAAhG,EAAA,6DACnBgG,EAAEC,iBADiB,SAECjB,GAAU,CAC5BY,WACAE,aAJiB,OAEbI,EAFa,OAMnBP,EAASO,GANU,2CAAH,sDASlB,OACE,sBAAK5I,UAAU,gBAAf,UACE,mDACA,uBAAM8E,SAAUD,EAAhB,UACE,kCACE,yCACA,uBAAO3F,KAAK,OAAO2J,SAAU,SAAAH,GAAC,OAAIH,EAAYG,EAAEI,OAAOvG,aAEzD,kCACE,yCACA,uBAAOrD,KAAK,WAAW2J,SAAU,SAAAH,GAAC,OAAID,EAAYC,EAAEI,OAAOvG,aAE7D,8BACE,wBAAQrD,KAAK,SAAb,4B,sBCxBK,SAAS6J,KACtB,OACE,qBAAK/I,UAAU,cAAf,SACE,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOgJ,KAAK,SAAZ,SACE,cAACZ,GAAD,MAEF,cAAC,KAAD,CAAOY,KAAK,IAAZ,SACE,cAAC,GAAD,a,aCbNC,GAA4B,CAChChK,OAAQ,CACN,CACEuB,GAAI,EACJN,YAAa,CAAC,WACdD,OAAQ,SACRE,MAAO,SACP8C,KAAO,cACPC,QAAS,oBACTC,aAAe,SACf/C,KAAM,KACNC,aAAc,QACdC,aAAc,eAEhB,CACEE,GAAI,EACJN,YAAa,CAAC,cACdD,OAAQ,SACRE,MAAO,SACP8C,KAAO,cACPC,QAAS,oBACTC,aAAe,SACf/C,KAAM,KACNC,aAAc,QACdC,aAAc,WAEhB,CACEE,GAAI,EACJN,YAAa,CAAC,eACdD,OAAQ,SACRE,MAAO,SACP8C,KAAM,WACNC,QAAS,oBACTC,aAAe,SACf/C,KAAM,KACNC,aAAc,QACdC,aAAc,YAGlB6G,kBAAkB,GCvCpB,IAAM8B,GAA4B,CAChCvC,OAAQ,CACN,CACElG,GAAI,EACJ0F,KAAM,EACNpG,MAAO,aACN,CACDU,GAAI,EACJ0F,KAAM,EACNpG,MAAO,YACN,CACDU,GAAI,EACJ0F,KAAM,EACNpG,MAAO,cCXb,IAAMoJ,GAAeC,aAAgB,CACnCpJ,cFwCa,WAGC,IAFdD,EAEa,uDAFQmJ,GACrBG,EACa,uCACb,OAAQA,EAAOlK,MAEb,KAAKJ,EAAYK,oBACf,OAAO,2BACFW,GADL,IAEEb,OAAQmK,EAAOhK,UAInB,KAAKN,EAAYS,2BACf,OAAO,2BACFO,GADL,IAEEqH,iBAAkBiC,EAAOhK,UAI7B,KAAKN,EAAYmG,cACf,OAAO,2BACFnF,GADL,IAEEb,OAAQmK,EAAOhK,UAInB,QACE,OAAOU,IEnEX2G,cDea,WAGC,IAFd3G,EAEa,uDAFQmJ,GACrBG,EACa,uCACb,OAAQA,EAAOlK,MACb,KAAKyG,GAAYK,oBACf,OAAO,2BACFlG,GADL,IAEE4G,OAAQ5G,EAAM4G,OAAOxE,KACnB,SAAA6D,GAAK,OAAIA,EAAMvF,KAAO4I,EAAOhK,QAAQoB,GAA5B,2BAAqCuF,GAArC,IAA4CjG,MAAOsJ,EAAOhK,QAAQU,QAASiG,OAK1F,QACE,OAAOjG,MCzBAuJ,GAAQC,aAAYJ,ICJjCK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAACN,GAAD,QAGJW,SAASC,eAAe,U,mBCZ1BC,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mBCA1ED,EAAOC,QAAU,CAAC,cAAgB,gC","file":"static/js/main.3043ed16.chunk.js","sourcesContent":["import {CardProps} from \"../../../Components/App/Components/Card/card.types\"\n\nexport interface OrdersState {\n    orders: CardProps[]\n    showAddOrderForm: boolean\n}\n\nexport enum OrdersTypes {\n    CHANGE_ORDER_STATUS = \"CHANGE_ORDER_STATUS\",\n    SET_ADD_ORDER_FORM_VISIBLE = \"SET_ADD_ORDER_FORM_VISIBLE\",\n    SET_ADD_ORDER = \"SET_ADD_ORDER\",\n}\n\nexport type OrdersActions =\n    | {type: OrdersTypes.CHANGE_ORDER_STATUS , payload: CardProps[]}\n    | {type: OrdersTypes.SET_ADD_ORDER_FORM_VISIBLE, payload: boolean}\n    | {type: OrdersTypes.SET_ADD_ORDER, payload: CardProps[]}\n\nexport enum OrdersCurrentState {\n    ON_HOLD = \"on_hold\",\n    IN_PROGRESS = \"in_progress\",\n    READY = \"ready\",\n    DONE = \"done\",\n    CANCEL = \"cancel\",\n}\n","import {OrdersActions, OrdersTypes} from \"./orders.types\"\nimport {CardProps} from \"../../../Components/App/Components/Card/card.types\"\n\nexport function changeOrderStatus(orders: CardProps[]): OrdersActions {\n  return {\n    type: OrdersTypes.CHANGE_ORDER_STATUS,\n    payload: orders,\n  }\n}\n\nexport function setAddOrderFormVisible(show: boolean): OrdersActions {\n  return{\n    type: OrdersTypes.SET_ADD_ORDER_FORM_VISIBLE,\n    payload: show,\n  }\n}\n\nexport function addOrder(data: CardProps[]): OrdersActions {\n  return{\n    type: OrdersTypes.SET_ADD_ORDER,\n    payload: data,\n  }\n}","import {CardProps} from \"../Card/card.types\"\n\nexport interface ColumnProps {\n    columnType: \"pending\" | \"cooking\" | \"ready\",\n    data: CardProps[],\n  }\n\nexport interface Filter {\n  name: keyof CardProps,\n  order: Order,\n}\n\nexport enum Order {\n  ASC = 1,\n  DESC = -1,\n}","import React from \"react\"\nimport \"./style.scss\"\nimport { CardProps, OrderState } from \"./card.types\"\nimport PersonIcon from \"@material-ui/icons/Person\"\nimport FastfoodIcon from \"@material-ui/icons/Fastfood\"\nimport CallIcon from \"@material-ui/icons/Call\"\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\"\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\"\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\"\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\"\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\"\nimport { changeOrderStatus } from \"../../../../Redux/Reducers/Orders/orders.actions\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { rootState } from \"../../../../Redux/Store\"\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  const dispatch = useDispatch()\n\n  const orders = useSelector((state: rootState) => state.ordersReducer.orders)\n\n  const setNextOrderStatus = (id: number) => {\n    const index = orders.findIndex((order) => order.id === id)\n    const tempNewOrders = [...orders] //copy of current orders\n\n    let newStatus: OrderState = \"cancel\"\n\n    //temporal solution\n    switch (tempNewOrders[index].currentState) {\n      case \"on_hold\":\n        newStatus = \"in_progress\"\n        break\n\n      case \"in_progress\":\n        newStatus = \"ready\"\n        break\n\n      default:\n        newStatus = \"on_hold\"\n        break\n    }\n\n    tempNewOrders[index] = {\n      ...orders[index],\n      currentState: newStatus,\n    }\n    dispatch(changeOrderStatus(tempNewOrders))\n  }\n\n  const setPreviousOrderStatus = (id: number) => {\n    const index = orders.findIndex((order) => order.id === id)\n    const tempNewOrders = [...orders] //copy of current orders\n\n    let newStatus: OrderState = \"cancel\"\n\n    //temporal solution\n    switch (tempNewOrders[index].currentState) {\n      case \"in_progress\":\n        newStatus = \"on_hold\"\n        break\n\n      case \"ready\":\n        newStatus = \"in_progress\"\n        break\n\n      default:\n        newStatus = \"on_hold\"\n        break\n    }\n\n    tempNewOrders[index] = {\n      ...orders[index],\n      currentState: newStatus,\n    }\n    dispatch(changeOrderStatus(tempNewOrders))\n  }\n\n  return (\n    <div className=\"card-info-wapper\">\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <PersonIcon />\n        </div>\n        <div>\n          <span>{props.client}</span>\n        </div>\n      </div>\n\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <FastfoodIcon />\n        </div>\n        <div>\n          <span>{props.productList}</span>\n        </div>\n      </div>\n\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <CallIcon />\n        </div>\n        <div>\n          <span>{props.phone}</span>\n        </div>\n      </div>\n\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <AttachMoneyIcon />\n        </div>\n        <div>\n          <span>{props.cost}</span>\n        </div>\n      </div>\n\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <AllInboxIcon />\n        </div>\n        <div>\n          <span>{props.deliveryType}</span>\n        </div>\n      </div>\n\n      <div className=\"card-info-data-wrapper\">\n        <div>\n          <HourglassEmptyIcon />\n        </div>\n        <div>\n          <span>{props.currentState}</span>\n        </div>\n      </div>\n\n      <div className=\"card-buttons-wrapper\">\n        <button\n          onClick={() => setPreviousOrderStatus(props.id)}\n          disabled={props.currentState === \"on_hold\"}\n        >\n          <NavigateBeforeIcon />\n        </button>\n        <button\n          onClick={() => setNextOrderStatus(props.id)}\n          disabled={props.currentState === \"ready\"}\n        >\n          <NavigateNextIcon />\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React, { useState } from \"react\"\nimport Card from \"../Card\"\nimport { CardProps } from \"../Card/card.types\"\nimport { ColumnProps, Order, Filter } from \"./column.types\"\nimport \"./style.scss\"\n\nconst sortCardsBy = (\n  cards: CardProps[],\n  property: keyof CardProps,\n  order: Order = Order.ASC,\n): CardProps[] => {\n  const getCardValue = (card: CardProps, property: keyof CardProps): string | number => {\n    let value: string | number = 0\n    if (typeof card[property] === \"string\") value = (card[property] as string).charAt(0)\n    if (typeof card[property] === \"number\") value = card[property] as number\n    return value\n  }\n  return cards.sort((a, b) =>\n    getCardValue(a, property) > getCardValue(b, property) ? order : -order,\n  )\n}\n\nconst orderButtons = (\n  cards: CardProps[],\n  setCards: (card: CardProps[]) => void,\n  currentFilter: Filter | null, setCurrentFilter: (filter: Filter) => void,\n): JSX.Element => {\n  const excludedProperties = [\"id\"]\n  if (cards.length === 0) return (<></>)\n  const properties = (Object.keys(cards[0]) as Array<keyof CardProps>)\n    .filter(property => !excludedProperties.includes(property))\n  const newOrder = (property: keyof CardProps, currentOrder: Order): number => {\n    return currentFilter && currentFilter.name === property ? -currentOrder : currentOrder\n  }\n  const status = (property: keyof CardProps, currentOrder: Order): number => {\n    let status = 0\n    if (currentFilter && currentFilter.name === property) status = newOrder(property, currentOrder)\n    return status\n  }\n\n  // TODO: This is just a template, buttons should have icons instead of names or numbers\n  return (<>\n    {properties.map((property, idx) => (\n      <button\n        onClick={() => {\n          const order = newOrder(property, currentFilter?.order || 1)\n          setCards(sortCardsBy(cards, property, order))\n          setCurrentFilter({name: property, order: order})\n        }}\n        key={idx}>\n          Order by {property} {status(property, currentFilter?.order || 1)}\n      </button>\n    ))}\n  </>)\n}\n\nconst Column: React.FC<ColumnProps> = (props: ColumnProps) => {\n  const [, setCards] = useState<CardProps[]>(props.data)\n  const [currentFilter, setCurrentFilter] = useState<Filter | null>(null)\n\n  return (\n    <div className=\"column-wrapper\">\n      <div className=\"column-title\">{props.columnType}</div>\n\n      {orderButtons(props.data, setCards, currentFilter, setCurrentFilter)}\n      <div className=\"column-data-container\">\n        {props.data.map((data, idx) => (\n          <Card\n            id={data.id}\n            productList={data.productList}\n            client={data.client}\n            phone={data.phone}\n            note ={data.note}\n            address = {data.address}\n            neighborhood = {data.neighborhood}\n            cost={data.cost}\n            deliveryType={data.deliveryType}\n            currentState={data.currentState}\n            key={idx}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Column\n","import { createSelector } from \"reselect\"\nimport { CardProps } from \"../../../Components/App/Components/Card/card.types\"\nimport { rootState } from \"../../Store\"\nimport {OrdersCurrentState} from \"./orders.types\"\n\nexport const ordersSelector = (state: rootState): CardProps[] => state.ordersReducer.orders\n\nexport const filterPendingOrders = createSelector(\n  [ordersSelector],\n  (orders) => {\n    return orders?.filter(order => order.currentState === OrdersCurrentState.ON_HOLD)\n  })\n\nexport const filterCookingOrders = createSelector(\n  [ordersSelector],\n  (orders) => {\n    return orders?.filter(order => order.currentState === OrdersCurrentState.IN_PROGRESS)\n  })\n\nexport const filterReadyOrders = createSelector(\n  [ordersSelector],\n  (orders) => {\n    return orders?.filter(order => order.currentState === OrdersCurrentState.READY)\n  })","export const CREATE_ORDER_FORM_LABELS = {\n  client: \"Cliente\",\n  product: \"Producto\",\n  note: \"Nota\",\n  phone: \"Teléfono\",\n  address: \"Dirección\",\n  neighborhood: \"Barrio\",\n  cost: \"Costo\",\n  deliveryType: \"Tipo de entrega\",\n}\n\nexport const CREATE_ORDERS_FORMS_NAMES = {\n  id: \"id\",\n  productList: \"productList\",\n  note : \"note\",\n  client: \"client\",\n  phone: \"phone\",\n  address: \"address\",\n  neighborhood : \"neighborhood\",\n  cost: \"cost\",\n  deliveryType: \"deliveryType\",\n  currentState: \"currentState\",\n}","import React, { Ref } from 'react';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface Props{\r\n  inputName: string;\r\n  type?: 'text' | 'number' | 'email' | 'password';\r\n  errors?: string[];\r\n  label: string;\r\n  inputRef?: Ref<HTMLInputElement>;\r\n}\r\n\r\nexport default function CustomInput({inputName, type = 'text', errors, label, inputRef}: Props){\r\n  return (\r\n    <>\r\n        <label htmlFor={inputName} className={styles.customLabel}>{label}</label>\r\n        <input name={inputName} id={inputName} type={type} className={styles.customInput} ref={inputRef}/>\r\n    </>\r\n  )\r\n}","import React from \"react\"\nimport { useForm } from \"react-hook-form\"\n\nimport { CustomDialogProps } from \"./customdialog.types\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport { CardProps } from \"../Card/card.types\"\nimport { CREATE_ORDER_FORM_LABELS, CREATE_ORDERS_FORMS_NAMES  } from \"./constants\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addOrder } from \"../../../../Redux/Reducers/Orders/orders.actions\"\nimport { rootState } from \"../../../../Redux/Store\"\nimport styles from \"./styles.module.scss\"\nimport CustomInput from \"../CustomInput\"\n\nexport default function CustomDialog(props :CustomDialogProps) {\n  const dispatch = useDispatch()\n  const currentCards = useSelector(\n    (state: rootState) => state.ordersReducer.orders,\n  )\n\n  const { register, handleSubmit, watch, errors } = useForm<CardProps>({mode: \"all\"})\n  const onSubmit = handleSubmit(data => {\n    data.currentState = \"on_hold\"\n    data.id= 4\n    const newOrders = [\n      ...currentCards,\n      data,\n    ]\n    dispatch(addOrder(newOrders))\n  })\n  return (\n    <Dialog open={props.show}>\n      <DialogTitle id=\"form-dialog-title\">Crear orden</DialogTitle>\n      <form onSubmit={onSubmit}>\n        <DialogContent className={styles.dialogContent}>\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.client}\n            label={CREATE_ORDER_FORM_LABELS.client}\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.productList}\n            label={CREATE_ORDER_FORM_LABELS.product}\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.note}\n            label={CREATE_ORDER_FORM_LABELS.note}\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.phone}\n            label={CREATE_ORDER_FORM_LABELS.phone}\n            type=\"number\"\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.address}\n            label={CREATE_ORDER_FORM_LABELS.address}\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.neighborhood}\n            label={CREATE_ORDER_FORM_LABELS.neighborhood}\n            inputRef={register({ required: true})}\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.cost}\n            label={CREATE_ORDER_FORM_LABELS.cost}\n            inputRef={register({ required: true})}\n            type=\"number\"\n          />\n          <CustomInput\n            inputName={CREATE_ORDERS_FORMS_NAMES.deliveryType}\n            label={CREATE_ORDER_FORM_LABELS.deliveryType}\n            inputRef={register({ required: true})}\n          />\n        </DialogContent>\n        <DialogActions>\n          <button onClick={() => props.negativeAction()} type=\"button\">Cancelar</button>\n          <button type=\"submit\">Guardar</button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}\n","import { TableProps } from \"../../../Components/App/Components/Table/table.types\"\n\nexport interface TablesState {\n    tables: TableProps[]\n}\n\nexport enum TablesTypes {\n    CHANGE_TABLE_STATUS = \"CHANGE_TABLE_STATUS\"\n}\n\nexport type TablesActions = {\n    type: TablesTypes.CHANGE_TABLE_STATUS , payload: TableProps\n}\n\nexport enum TablesCurrentState {\n    AVAILABLE = \"available\",\n    OCCUPIED = \"occupied\",\n    RESERVED = \"reserved\",\n}","import React from \"react\"\nimport \"./style.scss\"\nimport { TableProps, TableState } from \"./table.types\"\nimport { useDispatch } from \"react-redux\"\nimport { Button, ButtonGroup } from \"@material-ui/core\"\nimport { changeTableStatus } from \"../../../../Redux/Reducers/Tables/table.actions\"\n\nconst Table: React.FC<TableProps> = (props: TableProps) => {\n  const dispatch = useDispatch()\n\n  const setTableStatus = (table: TableProps, state: TableState) => {\n    dispatch(changeTableStatus({...table, state: state}))\n  }\n\n  return (\n    <div className=\"table-info-wapper\">\n      <span>id: {props.id}</span>\n      <span>bill id: {props.bill}</span>\n      <span>state: {props.state}</span>\n      <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n        <Button\n          variant={props.state === \"available\" ? \"contained\" : \"text\"}\n          onClick={() => setTableStatus(props, \"available\")}\n          disabled={props.state === \"available\"}\n        >Disponible</Button>\n        <Button\n          variant={props.state === \"occupied\" ? \"contained\" : \"text\"}\n          onClick={() => setTableStatus(props, \"occupied\")}\n          disabled={props.state === \"occupied\"}\n        >Ocupada</Button>\n        <Button\n          variant={props.state === \"reserved\" ? \"contained\" : \"text\"}\n          onClick={() => setTableStatus(props, \"reserved\")}\n          disabled={props.state === \"reserved\"}\n        >Reservada</Button>\n      </ButtonGroup>\n    </div>\n  )\n}\n\nexport default Table\n","import { TablesActions, TablesTypes } from \"./tables.types\"\nimport { TableProps } from \"../../../Components/App/Components/Table/table.types\"\n\nexport function changeTableStatus(table: TableProps): TablesActions {\n  return {\n    type: TablesTypes.CHANGE_TABLE_STATUS,\n    payload: table,\n  }\n}","import { TableProps } from \"../../../Components/App/Components/Table/table.types\"\nimport { rootState } from \"../../Store\"\n\nexport const tablesSelector = (state: rootState): TableProps[] => state.tablesReducer.tables","import React, { useCallback, useMemo } from \"react\"\nimport Column from \"../../Components/Column\"\nimport \"./style.scss\"\nimport {\n  filterPendingOrders,\n  filterCookingOrders,\n  filterReadyOrders,\n} from \"../../../../Redux/Reducers/Orders/orders.selectors\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport Fab from \"@material-ui/core/Fab\"\nimport AddIcon from \"@material-ui/icons/Add\"\nimport CustomDialog from \"../../Components/CustomDialog\"\nimport { setAddOrderFormVisible } from \"../../../../Redux/Reducers/Orders/orders.actions\"\nimport { rootState } from \"../../../../Redux/Store\"\nimport Table from \"../../Components/Table\"\nimport { tablesSelector } from \"../../../../Redux/Reducers/Tables/tables.selectors\"\n\nconst Home: React.FC = () => {\n  const dispatch = useDispatch()\n\n  //selectors\n  const pendingOrdersSelector = useMemo(() => filterPendingOrders, [])\n  const cookingOrdersSelector = useMemo(() => filterCookingOrders, [])\n  const readyOrdersSelector = useMemo(() => filterReadyOrders, [])\n\n  const pendingOrders = useSelector(pendingOrdersSelector, () => false)\n  const cookingOrders = useSelector(cookingOrdersSelector, () => false)\n  const readyOrders = useSelector(readyOrdersSelector, () => false)\n  const tables = useSelector(tablesSelector, () => false)\n\n  const showAddOrderForm = useSelector(\n    (state: rootState) => state.ordersReducer.showAddOrderForm,\n  )\n\n  const onSaveForm = useCallback(() => alert(\"positive\"), [])\n  const onCancelSaveForm = useCallback(\n    () => dispatch(setAddOrderFormVisible(false)),\n    [dispatch],\n  )\n\n  return (\n    <div className=\"main-wrapper\">\n      <div className=\"home-wrapper\">\n        <Column columnType=\"pending\" data={pendingOrders} />\n        <Column columnType=\"cooking\" data={cookingOrders} />\n        <Column columnType=\"ready\" data={readyOrders} />\n      </div>\n\n      <div className=\"fab-wapper\">\n        <Fab\n          className=\"custom-fab\"\n          onClick={() => dispatch(setAddOrderFormVisible(true))}\n        >\n          <AddIcon />\n        </Fab>\n      </div>\n\n      <CustomDialog\n        show={showAddOrderForm}\n        positiveAction={onSaveForm}\n        negativeAction={onCancelSaveForm}\n      />\n      <div>\n        {tables.map(table => (\n          <Table\n            key={table.id}\n            id={table.id}\n            bill={table.bill}\n            state={table.state}\n          ></Table>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","export const loginUser = async(credentials: any) => {\n  return fetch(\"http://localhost:8080/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(credentials),\n  }).then(data => data.json())\n}","import React, { useState } from \"react\"\nimport { loginUser } from \"./login\"\nimport \"./style.scss\"\n\nexport default function Login({ setToken }: any) {\n  const [username, setUserName] = useState<string>()\n  const [password, setPassword] = useState<string>()\n\n  const handleSubmit = async (e: any) => {\n    e.preventDefault()\n    const token = await loginUser({\n      username,\n      password,\n    })\n    setToken(token)\n  }\n\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Iniciar sesión</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <p>Username</p>\n          <input type=\"text\" onChange={e => setUserName(e.target.value)} />\n        </label>\n        <label>\n          <p>Password</p>\n          <input type=\"password\" onChange={e => setPassword(e.target.value)} />\n        </label>\n        <div>\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  )\n}","import React from \"react\"\nimport \"./styles.scss\"\nimport Home from \"./Screens/Home\"\nimport Login from \"./Screens/Login\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\n\nexport default function App(): JSX.Element {\n  return (\n    <div className=\"app-wrapper\">\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n","import {OrdersState, OrdersActions, OrdersTypes} from \"./orders.types\"\n\nconst initialState: OrdersState = {\n  orders: [\n    {\n      id: 1,\n      productList: [\"Papitas\"],\n      client: \"Andros\",\n      phone: \"123456\",\n      note : \"Extra salsa\",\n      address: \"Carrera careverga\",\n      neighborhood : \"Calima\",\n      cost: 1234,\n      deliveryType: \"tipo1\",\n      currentState: \"in_progress\",\n    },\n    {\n      id: 2,\n      productList: [\"Salchipapa\"],\n      client: \"Andros\",\n      phone: \"123456\",\n      note : \"Extra salsa\",\n      address: \"Carrera careverga\",\n      neighborhood : \"Calima\",\n      cost: 1234,\n      deliveryType: \"tipo1\",\n      currentState: \"on_hold\",\n    },\n    {\n      id: 3,\n      productList: [\"Hamburguesa\"],\n      client: \"Andros\",\n      phone: \"123456\",\n      note: \"adasdasd\",\n      address: \"Carrera careverga\",\n      neighborhood : \"Calima\",\n      cost: 1234,\n      deliveryType: \"tipo1\",\n      currentState: \"on_hold\",\n    },\n  ],\n  showAddOrderForm: false,\n}\n\n\nexport default function OrdersReducer(\n  state: OrdersState = initialState,\n  action: OrdersActions,\n): OrdersState {\n  switch (action.type) {\n\n    case OrdersTypes.CHANGE_ORDER_STATUS: {\n      return {\n        ...state,\n        orders: action.payload,\n      }\n    }\n\n    case OrdersTypes.SET_ADD_ORDER_FORM_VISIBLE: {\n      return {\n        ...state,\n        showAddOrderForm: action.payload,\n      }\n    }\n\n    case OrdersTypes.SET_ADD_ORDER: {\n      return {\n        ...state,\n        orders: action.payload,\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}","import { TablesActions, TablesState, TablesTypes } from \"./tables.types\"\n\nconst initialState: TablesState = {\n  tables: [\n    {\n      id: 1,\n      bill: 1,\n      state: \"available\",\n    }, {\n      id: 2,\n      bill: 2,\n      state: \"occupied\",\n    }, {\n      id: 3,\n      bill: 3,\n      state: \"reserved\",\n    },\n  ],\n}\n\n\nexport default function tablesReducer(\n  state: TablesState = initialState,\n  action: TablesActions,\n): TablesState {\n  switch (action.type) {\n    case TablesTypes.CHANGE_TABLE_STATUS: {\n      return {\n        ...state,\n        tables: state.tables.map(\n          table => table.id === action.payload.id ? {...table, state: action.payload.state} : table,\n        ),\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}","import { createStore, combineReducers} from \"redux\"\nimport ordersReducer from \"../Reducers/Orders/orders.reducer\"\nimport tablesReducer from \"../Reducers/Tables/tables.reducer\"\n\nconst rootReducer  = combineReducers({\n  ordersReducer,\n  tablesReducer,\n})\n\nexport type rootState = ReturnType<typeof rootReducer>;\n\nexport const store = createStore(rootReducer)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles.scss\"\nimport App from \"./Components/App\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./Redux/Store\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customLabel\":\"styles_customLabel__37n5r\",\"customInput\":\"styles_customInput__24wEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogContent\":\"styles_dialogContent__247-b\"};"],"sourceRoot":""}